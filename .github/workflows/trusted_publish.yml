name: Publish Package

on:
  workflow_dispatch:

permissions:
  id-token: write  # Required for OIDC
  contents: read

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Bump version + create tag
        id: bump
        env:
          RELEASE_TYPE: ${{ github.event.inputs.release_type }}
          PREID: ${{ github.event.inputs.preid }}
          EXACT_VER: ${{ github.event.inputs.version }}
        run: |
          set -euo pipefail
          if [ "$RELEASE_TYPE" = "exact" ]; then
            if [ -z "${EXACT_VER:-}" ]; then
              echo "version input is required when release_type=exact" >&2
              exit 1
            fi
            npm version "$EXACT_VER" -m "chore(release): %s [skip ci]"
          elif [[ "$RELEASE_TYPE" == pre* || "$RELEASE_TYPE" == "prerelease" ]]; then
            npm version "$RELEASE_TYPE" --preid "${PREID:-rc}" -m "chore(release): %s [skip ci]"
          else
            npm version "$RELEASE_TYPE" -m "chore(release): %s [skip ci]"
          fi

          # Получаем новую версию и тег
          NEW_VER=$(node -p "require('./package.json').version")
          echo "version=$NEW_VER" >> "$GITHUB_OUTPUT"
          echo "tag=v$NEW_VER" >> "$GITHUB_OUTPUT"

      - name: Push commit and tag
        run: |
          git push origin HEAD
          git push origin "${{ steps.bump.outputs.tag }}"

      - name: Determine npm dist-tag
        id: dist
        run: |
          VERSION=$(node -p "require('./package.json').version")
          if [[ "$VERSION" == *"-"* ]]; then
            echo "tag=next" >> "$GITHUB_OUTPUT"
          else
            echo "tag=latest" >> "$GITHUB_OUTPUT"
          fi
          echo "Will publish with dist-tag: $(cat $GITHUB_OUTPUT)"


      # Ensure npm 11.5.1 or later is installed
      - name: Update npm
        run: npm install -g npm@latest
      - run: npm ci
      - run: npm run build --if-present
      - run: npm publish --access public --provenance --tag "${{ steps.dist.outputs.tag }}"
